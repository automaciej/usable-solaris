Solaris 10 preliminary setup
============================
Maciej Bliziński
$Id$

SSH access
----------

If you have just installed a Solaris 10 box and logged in via the
console for the first time, you probably see something similar to this:

--------------------------------------------------------------------------------
Sun Microsystems Inc.   SunOS 5.10      Generic January 2005
# █
--------------------------------------------------------------------------------

The purpose of this document is to provide a quick overview of how to
set up your Solaris 10 system.

The first thing I do after logging in via console, is starting bash.

--------------------------------------------------------------------------------
# bash -l
bash-3.00# █
--------------------------------------------------------------------------------

Enable remote root ssh logins for convenience (make sure you have a strong root
password!). _I don't recommend enabling this for production systems._

--------------------------------------------------------------------------------
cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak
sed < /etc/ssh/sshd_config.bak > /etc/ssh/sshd_config \
	-e 's/PermitRootLogin no/PermitRootLogin yes/'
svcadm restart ssh
--------------------------------------------------------------------------------

Now you can login via ssh and avoid working with the slow system console. It's
also advisable to have more than one session open just in case something goes
wrong.

To find out your IP address:

--------------------------------------------------------------------------------
ifconfig -a
--------------------------------------------------------------------------------

Go ahead and log in via ssh. (You need to start bash again.)

--------------------------------------------------------------------------------
$ ssh root@<ip-address>
(...)
Sun Microsystems Inc.   SunOS 5.10      Generic January 2005
# bash -l
bash-3.00# █
--------------------------------------------------------------------------------

Root's home directory and shell
-------------------------------

Let's set root's home directory and default shell. It's been argued that having
`/` as root's home directory is fine because you can always use `/var/tmp` for
working files. Yet somehow I don't like the idea of having root's `.bashrc` and
`.ssh` kept in filesystem's root.

--------------------------------------------------------------------------------
mkdir /root
chmod 0700 /root
chown root:root /root
cp /etc/passwd /etc/passwd.bak
sed < /etc/passwd.bak > /etc/passwd.new \
  -e 's+root:x:0:0:Super-User:/:/sbin/sh+root:x:0:0:Super-User:/root:/bin/bash+'
--------------------------------------------------------------------------------

You can examine `/etc/passwd.new` to see if it contains the right thing. If it
looks good, copy it to `/etc/passwd`.

--------------------------------------------------------------------------------
[[ -s /etc/passwd.new ]] && cp /etc/passwd.new /etc/passwd || echo "It's empty."
--------------------------------------------------------------------------------

If you can now log off, as these changes require re-login to take effect.

SSH keys
--------

It's a good moment to set up authentication using ssh keys.  From the system
where your keys live, execute a command along these lines:

--------------------------------------------------------------------------------
ssh-copy-id -i ~/.ssh/id_dsa.pub root@<ip-address>
--------------------------------------------------------------------------------

Default PATH
------------

Let's set default PATH.

--------------------------------------------------------------------------------
echo >> /etc/default/login \
  "PATH=/opt/csw/gnu:/opt/csw/sbin:/opt/csw/bin:\
/bin:/sbin:/usr/sbin:/usr/bin:\
/opt/SUNWjet/bin:/usr/sfw/bin:/usr/sfw/sbin:/usr/ccs/bin:\
/opt/SUNWspro/bin"

echo >> /etc/default/login \
"SUPATH=/opt/csw/gnu:/opt/csw/sbin:/opt/csw/bin:\
/bin:/sbin:/usr/sbin:/usr/bin:\
/opt/SUNWjet/bin:/usr/sfw/bin:/usr/sfw/sbin:/usr/ccs/bin:\
/opt/SUNWspro/bin"
--------------------------------------------------------------------------------

NOTE: The file `/etc/default/login` doesn't really follow shell syntax, and it's
not meant to be sourced.

It's useful to set `MANPATH` as well.

--------------------------------------------------------------------------------
echo >> /etc/profile \
  "MANPATH=/opt/csw/share/man:/opt/SUNWjet/man:/usr/sfw/share/man\
/opt/SUNWexplo/man:/opt/SUNWspro/man:/usr/share/man"
echo >> /etc/profile "export MANPATH"
--------------------------------------------------------------------------------

Default prompt
--------------

Bash has got sucky prompt by default, let's set it to something different.

// bash-3.00# PS1="\u@\h \w # "
--------------------------------------------------------------------------------
PS1='\[\033[01;31m\]\h\[\033[01;34m\] \W \$\[\033[00m\] '
echo "PS1='$PS1'" >> ~/.bashrc
echo '[[ -r ~/.bashrc ]] && source ~/.bashrc' >> ~/.bash_profile
--------------------------------------------------------------------------------

Now the prompt should look like this:

--------------------------------------------------------------------------------
root@vsol01 / # █
--------------------------------------------------------------------------------

That's better. You can now log off (but keep your console session open just in
case) and log in again to see if your `PATH` and prompt are set correctly.


Default TERM
------------

If you want to do any editing in vi (not vim, but the stock Solaris vi) and
you're using GNU screen, you need to set your TERM variable into something that
bare Solaris understands:

--------------------------------------------------------------------------------
export TERM=xterm
--------------------------------------------------------------------------------

Don't make that permanent in ~/.bashrc, because we'll have a better
terminfo later on.


OpenCSW
-------

Now, the first thing you most probably want to do, is getting a set of
GNU tools. I recommend using the OpenCSW package repository, as it tends
to have the most up to date versions of packages.

--------------------------------------------------------------------------------
pkgadd -d http://get.opencsw.org/now all
--------------------------------------------------------------------------------

Set up the default mirror (optional).

--------------------------------------------------------------------------------
echo >> /etc/opt/csw/pkgutil.conf \
  "mirror=ftp://ftp.heanet.ie/pub/opencsw/unstable"
--------------------------------------------------------------------------------

Update your OpenCSW catalog cache.

--------------------------------------------------------------------------------
pkgutil -U
--------------------------------------------------------------------------------

You can now install all the software available from OpenCSW.
Some of my first choices:

--------------------------------------------------------------------------------
pkgutil -y -i vim elinks findutils gawk ggrep gsed gtar wget rsync sudo \
	screen mc gfile coreutils
--------------------------------------------------------------------------------

To initialize the findutils database:

--------------------------------------------------------------------------------
gupdatedb &
--------------------------------------------------------------------------------


Terminfo
--------

If you like to use colors in your terminal, and would like programs
(e.g. vim) to know that your terminal understands colors, you need
a better terminfo.

--------------------------------------------------------------------------------
pkgutil -y -i terminfo
echo "TERMINFO=/opt/csw/share/terminfo" >> /etc/profile
echo "export TERMINFO" >> /etc/profile
--------------------------------------------------------------------------------

Pager
-----
The default Solaris pager, `more`, only allows to scroll down, and not up.
Let's set `less` as the default pager.

--------------------------------------------------------------------------------
pkgutil -y -i less
echo "PAGER=/opt/csw/bin/less" >> /etc/profile
echo "export PAGER" >> /etc/profile
--------------------------------------------------------------------------------

Regular user setup
------------------

You probably don't want to perform all the operations as root.  You can set up
a regular user account for yourself.  If you're accustomed to having your home
directory in /home, an attempt to a user with it will and up with an unhelpful
error message: "UX: useradd: ERROR: Unable to create the home directory:
Operation not applicable."  The problem is that in a default installation, the
/home directory is controlled by autofs.  In order to create directories there,
you need to either disable, or reconfigure autofs.  In this document, we'll go
for the disable option.  Set your user name in the first line.

--------------------------------------------------------------------------------
REGULAR_USER=maciej
svcadm disable autofs
useradd -s /bin/bash -m -d /home/${REGULAR_USER} ${REGULAR_USER}
passwd ${REGULAR_USER}
--------------------------------------------------------------------------------

For convenience, we'll also copy the ssh public key to allow easy ssh access.
While we're at it, we'll also set the prompt.

--------------------------------------------------------------------------------
mkdir /home/${REGULAR_USER}/.ssh
chmod 700 /home/${REGULAR_USER}/.ssh
cp /root/.ssh/authorized_keys /home/${REGULAR_USER}/.ssh/authorized_keys
UPS1='\[\033[00;33m\]\u@\h\[\033[01;34m\] \w \$\[\033[00m\] '
echo "PS1='$UPS1'" >> /home/${REGULAR_USER}/.bashrc
echo '[[ -r ~/.bashrc ]] && source ~/.bashrc' \
  >> /home/${REGULAR_USER}/.bash_profile
chown -R ${REGULAR_USER} /home/${REGULAR_USER}
--------------------------------------------------------------------------------

You will probably want sudo access from your regular user account.  sudo is not
available in the standard Solaris installation, because real men use pfexec.
However, you can install sudo from OpenCSW (see above).  By default, sudo won't
allow your user to gain root permissions.

--------------------------------------------------------------------------------
echo "${REGULAR_USER} ALL =(ALL) ALL" >> /etc/opt/csw/sudoers
chmod 0440 /etc/opt/csw/sudoers
--------------------------------------------------------------------------------

Note that generally, 'visudo' is the preferred way to edit the sudoers file.
It's just not convenient for scripting.

Log in as a regular user, check your PS1, PATH and MANPATH, and your
sudo access.

--------------------------------------------------------------------------------
maciej@vsol01 ~ $ sudo echo foo

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

Password: 
foo
maciej@vsol01 ~ $ █
--------------------------------------------------------------------------------

Congratulations!
----------------

Your preliminary setup is now complete.  If you have any questions, comments or
suggestions, here's my contact information:

--------------------------------------------------------------------------------
python -c "print 'bWFjaWVqLmJsaXppbnNraUBnbWFpbC5jb20='.decode('base64')"
--------------------------------------------------------------------------------
